{"version":3,"sources":["components/UI/Card.js","components/NewExpense/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","children","classes","className","ExpensesFilter","onChangeFilter","selected","value","onChange","event","target","ExpenseDate","date","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","expenses","length","map","el","i","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","totalMaximum","max","ExpensesChart","chartDataPoints","expense","getMonth","Expenses","items","useState","getSelectedValue","setSelectedValue","filteredExpenses","filter","toString","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","getEnteredTitle","setEnteredTitle","getEnteredAmount","setEnteredAmount","getEnteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","id","random","expensesData","App","getExpenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4accfae7.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = ({ children, className }) => {\n  const classes = 'card ' + className;\n  return <div className={classes}>{children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = ({ onChangeFilter, selected }) => {\n  const filterChangeHandler = (event) => {\n    onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={selected} onChange={filterChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import './ExpenseDate.css';\n\nconst ExpenseDate = ({ date }) => {\n  const month = date.toLocaleString('en-US', { month: 'long' });\n  const day = date.toLocaleString('en-US', { day: '2-digit' });\n  const year = date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year '>{day}</div>\n      <div className='expense-date__day'>{year}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = ({ title, amount, date }) => {\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={date} />\n        <div className='expense-item__description'>\n          <h2>{title}</h2>\n          <div className='expense-item__price'>${amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = ({ expenses }) => {\n  if (expenses.length === 0) {\n    return <h3 className='expenses-list__fallback'>No expenses found</h3>;\n  }\n  return (\n    <ul className='expenses-list'>\n      {expenses.map((el, i) => (\n        <ExpenseItem key={i} title={el.title} amount={el.amount} date={el.date} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from 'react';\nimport './ChartBar.css';\n\nconst ChartBar = ({ value, maxValue, label }) => {\n  let barFillHeight = '0%';\n\n  if (maxValue > 0) {\n    barFillHeight = Math.round((value / maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\n      </div>\n      <div className='chart-bar__label'>{label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react';\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = ({ dataPoints }) => {\n  const dataPointValues = dataPoints.map((el) => el.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {dataPoints.map((el, i) => (\n        <ChartBar key={el.label} value={el.value} maxValue={totalMaximum} label={el.label} />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = ({ expenses }) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../NewExpense/ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nimport './Expenses.css';\n\nconst Expenses = ({ items }) => {\n  const [getSelectedValue, setSelectedValue] = useState('2020');\n\n  const filterChangeHandler = (selectedYear) => {\n    setSelectedValue(selectedYear);\n  };\n\n  const filteredExpenses = items.filter((el) => {\n    return el.date.getFullYear().toString() === getSelectedValue;\n  });\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter selected={getSelectedValue} onChangeFilter={filterChangeHandler} />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList expenses={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = ({ onSaveExpenseData, onCancel }) => {\n  const [getEnteredTitle, setEnteredTitle] = useState('');\n  const [getEnteredAmount, setEnteredAmount] = useState('');\n  const [getEnteredDate, setEnteredDate] = useState('');\n  //   const [getUserInput, setUserInput] = useState({\n  //     getEnteredTitle: '',\n  //     getEnteredAmount: '',\n  //     getEnteredDate: '',\n  //   });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...getUserInput,\n    //   getEnteredTitle: event.target.value,\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...getUserInput,\n    //   getEnteredAmount: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //     return {...prevState, getEnteredAmount: event.target.value}\n    // })\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...getUserInput,\n    //   getEnteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: getEnteredTitle,\n      amount: +getEnteredAmount,\n      date: new Date(getEnteredDate),\n    };\n\n    onSaveExpenseData(expenseData);\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input type='text' value={getEnteredTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            value={getEnteredAmount}\n            min='0.01'\n            step='0.01'\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            value={getEnteredDate}\n            min='2019-01-01'\n            max='2022-12-31'\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='button' onClick={onCancel}>\n          Cancel\n        </button>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = ({ onAddExpense }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className='new-expense'>\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && (\n        <ExpenseForm onCancel={stopEditingHandler} onSaveExpenseData={saveExpenseDataHandler} />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst expensesData = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [getExpenses, setExpenses] = useState(expensesData);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={getExpenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}